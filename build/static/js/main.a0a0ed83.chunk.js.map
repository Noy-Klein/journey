{"version":3,"sources":["components/home/navbar.js","components/home/tripBox.js","components/home/trips.js","components/home/logo.js","components/home/header.js","components/home/popupaddtrip.js","components/home/home.js","components/users/Biglogo.js","components/users/signUp.js","components/singletrip/addButton.js","components/singletrip/addForm.js","components/singletrip/showcheckpoint.js","components/singletrip/tripDetails.js","components/singletrip/map.js","components/singletrip/timeline.js","components/singletrip/currTrip.js","components/users/login.js","components/users/landing.js","App.js","serviceWorker.js","store/tripStore.js","index.js"],"names":["Navbar","inject","observer","react_default","a","createElement","alt","src","className","id","onClick","this","changeshowpopup","name","onChange","inputChange","value","searchedtrip","placeholder","type","aria-describedby","search","Component","observable","action","e","_this2","target","_this3","props","store","changeshowpopupaddtrip","_this4","searchtrip","TripBox","set","_this","setTrip","trip","_id","style","display","width","Link","to","concat","height","title","Trips","tripstosearch","map","t","tripBox","username","key","Logo","findname","Header","componentDidMount","userId","then","findnamebyid","logout","logged","Popupaddtrip","description","startDate","min","endDate","Addthetrip","closepopup","alert","uppertitle","charAt","toUpperCase","slice","upperdescription","Addtrip","Home","_callee","regenerator_default","wrap","_context","prev","next","Wentback","getTrips","stop","header","logo","navbar","showpopupaddtrip","popupaddtrip","home_trips","Redirect","BigLogo","SignUp","add","upperusername","password","phone","email","includes","AddUser","setLogin","setId","user","console","log","clicked","login","Biglogo","inputChangeSignUp","checkusernameexist","AddButton","addNewCheckpoint","people","adress","upperpeople","addCheckPoint","data","pictures","closeButton","fixDate","time","split","max","closePopup","AddForm","togglePopup","showPopup","addButton","ShowCheckPoint","closeButtonCheckPoint","closeCheckPoint","componentWillMount","setCheckPoint","year","month","cp","currCheckpoint","maxHeight","maxWidth","Emailadress","checkfields","send","from","body","upperto","sendmail","TripDetails","MapContainer","addInitialCenter","click","marker","togglePopupCheckPoint","initialCenter","checkpoints","length","centerOfMap","coordinant","coordns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","c","push","err","return","sort","b","lng","currentCP","find","dist","center","google","zoom","path","strokeColor","strokeWeight","strokeStyle","strokeOpacity","animation","maps","Animation","DROP","position","GoogleApiWrapper","apiKey","TimeLine","clickTitle","changeCurrCP","clickClose","currentObjCP","backgroundColor","p","CurrTrip","close","goBack","match","params","timeline","addForm","tripDetails","showcheckpoint","back","Login","sent","ifexists","getTripsInLogin","setUser","inputChangeLogin","Landing","App","BrowserRouter","Route","exact","render","landing","_ref","currTrip","_ref2","home","signUp","Boolean","window","location","hostname","Store","newUser","New","axios","post","_callee2","imageurl","_context2","get","trips","getIcon","_callee3","searchIconName","json","_context3","localStorage","getItem","_callee4","_context4","_this5","_this6","setItem","_this7","_this8","_this9","_callee5","_context5","_this10","setTripsValue","Object","toConsumableArray","_callee6","_context6","_this11","usernameexist","_callee7","_context7","_this12","_this13","_callee8","ifE","_context8","_this14","ifExist","_callee9","checkpoint","_context9","_this15","allCheckpoint","_callee10","_context10","_this16","_callee11","_context11","_this17","_this18","_callee12","_context12","abrupt","_callee13","_context13","_callee14","newCheckPoint","images","updatedTrip","_context14","object","coo","results","geometry","items","pagemap","imageobject","thumbnailurl","_this19","t0","error","_callee15","_context15","_this20","searchword","_this21","filterdarr","filter","toString","toLowerCase","ReactDOM","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0a0ed83.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { action, observable } from \"mobx\";\r\nimport '../../App.css';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Navbar extends Component {\r\n\r\n  @observable searchedtrip = \"\";\r\n\r\n  @action inputChange = (e) => { this[e.target.name] = e.target.value }\r\n\r\n  @action changeshowpopup = () => {\r\n    this.props.store.changeshowpopupaddtrip();\r\n  }\r\n\r\n  @action search = () => {\r\n    this.props.store.searchtrip(this.searchedtrip);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <img alt='plus' src=\"https://png.pngtree.com/svg/20150820/_plus_circle_icon_1099005.png\" className=\"plusbtn\" id=\"plus\" onClick={this.changeshowpopup} />\r\n      <input name=\"searchedtrip\" onChange={this.inputChange} value={this.searchedtrip} placeholder=\"Find a trip\" type=\"text\" className=\"form-control searchinput\" aria-describedby=\"button-addon2\" />\r\n      <button className=\"btn btn-outline-secondary searchbutton\" onClick={this.search} type=\"button\" id=\"button-addon2\">search</button>\r\n    </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport '../../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n@inject('store')\r\n@observer\r\nclass TripBox extends Component {\r\n\r\n    set = () => {\r\n        this.props.store.setTrip(this.props.trip._id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'inline-block', width: '15%' }}>\r\n                <Link to={`/trips/${this.props.trip._id}`}><img onClick={this.set} alt='file' src=\"https://static.thenounproject.com/png/8841-200.png\" height=\"80px\" /></Link>\r\n                <h2>{this.props.trip.title}</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TripBox","import React, { Component } from 'react';\r\nimport TripBox from './tripBox';\r\nimport '../../App.css';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Trips extends Component {\r\n\r\n  render() {\r\n    // console.log(this.props.store.trips)\r\n    return (\r\n      <div>\r\n        {this.props.store.tripstosearch.map(t => {\r\n          return <TripBox username={this.props.username} id={t._id} key={t._id} trip={t} />\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Trips;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Logo extends Component {\r\n\r\n  findname = () => {\r\n    // if (this.props.store.userId) {\r\n    //   this.props.store.findnamebyid(this.props.store.userId)\r\n    //   return <h1>{this.props.store.username}'s  JOURNEYS</h1>\r\n    // }\r\n    // else {\r\n      return <h1>MY JOURNEYS</h1>\r\n    // }\r\n  }\r\n  render() {\r\n    return (<div className=\"logo\">\r\n      <Link to=\"/trips\"><img src=\"https://www.thebyte.com.au/wp-content/uploads/2016/09/global.png\" height=\"120px\" alt=\"error\" /></Link>\r\n      {this.findname()}\r\n      <h2>Every journey starts here...</h2>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default Logo;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport '../../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Header extends Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.store.setTrip(this.props.store.userId).then(() => {\r\n      this.props.store.findnamebyid(this.props.store.userId)\r\n    })\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.store.logout();\r\n    this.logged = false;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.store.userId) {\r\n      return (\r\n        <div>\r\n          <h2 className='hey'>Hey {this.props.store.username}!</h2>\r\n          <h2 onClick={this.logout}><Link className=\"logoutlink\" to='/'>LOG OUT<img height='21px' width='21px' alt='logout' src='https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Signout_font_awesome.svg/2000px-Signout_font_awesome.svg.png' /></Link></h2>\r\n          <img src=\"https://mbtskoudsalg.com/images/green-dot-png-5.png\" height=\"10px\" className=\"in\" alt=\"in\" />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return(\r\n      <div>\r\n        <h2 className='hey'>Hey !</h2>\r\n        <h2 onClick={this.logout}><Link className=\"logoutlink\" to='/'>LOG OUT<img height='21px' width='21px' alt='logout' src='https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Signout_font_awesome.svg/2000px-Signout_font_awesome.svg.png' /></Link></h2>\r\n        <img src=\"https://mbtskoudsalg.com/images/green-dot-png-5.png\" height=\"10px\" className=\"in\" alt=\"in\" />\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { action, observable } from \"mobx\";\r\nimport '../../App.css';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Popupaddtrip extends Component {\r\n\r\n  @observable title = \"\"\r\n  @observable description = \"\"\r\n  @observable startDate = \"\"\r\n  @observable endDate = \"\"\r\n\r\n  // componentDidMount=()=>{\r\n  //   this.props.store.getIcon(this.title.split(' ')[0] + ' icon transparent')\r\n  //   this.img = this.props.store.img\r\n  // }\r\n\r\n  @action closepopup = () => {\r\n    this.props.store.changeshowpopupaddtrip();\r\n  }\r\n\r\n  @action inputChange = (e) => { this[e.target.name] = e.target.value }\r\n\r\n  // @action icon = () => {\r\n  //   this.props.store.getIcon(this.title.split(' ')[0] + ' icon transparent')\r\n  //   this.img = this.props.store.img\r\n  // }\r\n\r\n  @action Addthetrip = () => {\r\n    if ((this.title === \"\") || (this.description === \"\") || (this.startDate === \"\") || (this.endDate === \"\") ) {\r\n      alert(\"Please fill out all the fields!\")\r\n    }// two folders cant have the same name!!\r\n    else {\r\n      // console.log(this.title.split(' ')[0])\r\n      // this.img = this.props.store.img\r\n      // console.log(this.img)\r\n      let uppertitle=this.title.charAt(0).toUpperCase() + this.title.slice(1)\r\n      let upperdescription=this.description.charAt(0).toUpperCase() + this.description.slice(1)\r\n      //`https://maxcdn.icons8.com/iOS7/PNG/25/Maps/${uppertitle.split(' ')[0]}_map-25.png`\r\n      this.props.store.Addtrip(uppertitle, upperdescription, this.startDate, this.endDate || `https://maxcdn.icons8.com/iOS7/PNG/25/City/city_filled-25.png`);  // picture of tikia\r\n      this.closepopup()\r\n      alert(\"Your trip saved!\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // this.icon()\r\n    // console.log(this.img)\r\n    return (<div className=\"popup\">\r\n      <input id=\"input1\" name=\"title\" onChange={this.inputChange} value={this.title} placeholder=\"Trip title\" type=\"text\" className=\"form-control inputpopup\" aria-describedby=\"button-addon2\" />\r\n      <br />\r\n      <input id=\"input2\" name=\"description\" onChange={this.inputChange} value={this.description} placeholder=\"Description\" type=\"text\" className=\"form-control inputpopup\" aria-describedby=\"button-addon2\" />\r\n      <br />\r\n      <input id=\"input3\" name=\"startDate\" onChange={this.inputChange} value={this.startDate} placeholder=\"Start Date\" type=\"Date\" className=\"form-control inputpopup\" aria-describedby=\"button-addon2\" />\r\n      <br />\r\n      <input id=\"input4\" name=\"endDate\" min={this.startDate} onChange={this.inputChange} value={this.endDate} placeholder=\"End Date\" type=\"Date\" className=\"form-control inputpopup\" aria-describedby=\"button-addon2\" />\r\n      <br />\r\n      <button className=\"btn btn-outline-secondary addtripbutton\" onClick={this.Addthetrip} type=\"button\" id=\"button-addon2\">Create Trip</button>\r\n      <button onClick={this.closepopup} className=\"btn btn-outline-secondary closepopupbutton\" type=\"button\">X</button>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popupaddtrip;\r\n","import React, { Component } from 'react';\r\nimport Navbar from './navbar';\r\nimport Trips from './trips';\r\nimport Logo from './logo';\r\nimport Header from './header';\r\nimport Popupaddtrip from './popupaddtrip';\r\nimport { observer, inject } from 'mobx-react';\r\nimport '../../App.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Home extends Component {\r\n\r\n  componentDidMount = async () => {\r\n    this.props.store.Wentback()\r\n    this.props.store.setTrip(this.props.store.userId).then(() => {\r\n      this.props.store.findnamebyid(this.props.store.userId)\r\n      this.props.store.getTrips()\r\n    })\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.store.logout();\r\n    this.logged = false;\r\n  }\r\n\r\n  render() {\r\n    // this.icon()\r\n    // let json = await axios.get(\"https://api.icons8.com/api/iconsets/search?term=romania\")\r\n        // console.log(json)\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Logo />\r\n        <Navbar />\r\n        {this.props.store.showpopupaddtrip ? <Popupaddtrip /> : null}\r\n        <Trips />\r\n        {!this.props.store.logged ? <Redirect to='/' /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport '../../App.css';\r\n\r\nclass BigLogo extends Component {\r\n  render() {\r\n    return (<div className=\"biglogo\">\r\n        <img src=\"https://www.thebyte.com.au/wp-content/uploads/2016/09/global.png\" height=\"330px\" alt=\"error\" />\r\n        <br/>\r\n        <br/>\r\n        <h1 className=\"hometitle\">MY JOURNEY</h1>\r\n        <h2 className=\"homesectitle\">Every journey starts here...</h2>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BigLogo;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../App.css'\r\nimport { observable, action } from 'mobx';\r\nimport { Redirect } from 'react-router-dom';\r\nimport BigLogo from './Biglogo';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass SignUp extends Component {\r\n    @observable username = \"\";\r\n    @observable password = \"\";\r\n    @observable phone = \"\";\r\n    @observable email = \"\";\r\n\r\n    @observable clicked = false\r\n\r\n    @action inputChangeSignUp = (e) => { \r\n        this[e.target.name] = e.target.value\r\n        if(e.target.name){\r\n            this.props.store.checkusernameexist(e.target.value)\r\n        }\r\n        \r\n    }\r\n\r\n    add = async () => {\r\n        let upperusername=this.username.charAt(0).toUpperCase() + this.username.slice(1)\r\n        // this.props.store.checkusernameexist(upperusername)\r\n        //console.log(this.props.store.usernameexist)\r\n        // if (this.props.store.usernameexist===true){\r\n        //     alert (\"This Username is taken!\")\r\n        // }\r\n        if ((this.username===\"\")||(this.password===\"\")||(this.phone===\"\")){\r\n            alert (\"Please fill out all the fields!\")\r\n        }\r\n        if ((this.email===\"\")||!(this.email.includes(\"@\"))||!(this.email.includes(\".com\"))){\r\n            alert (\"Please fill the Email correctly!\")\r\n        }\r\n        else{\r\n            await this.props.store.AddUser({ username: upperusername, password: this.password, phone: this.phone, email: this.email })\r\n                await this.props.store.setLogin(this.username, this.password)\r\n                // console.log(user)\r\n                this.props.store.setId(this.props.store.user._id)\r\n                this.props.store.findnamebyid(this.props.store.user._id)\r\n                console.log(this.props.store.username)\r\n                this.clicked = true;\r\n                this.props.store.login();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <BigLogo />\r\n            <div className=\"sign-up\">\r\n                <h1 className=\"title-sign-up\">Sign Up</h1>\r\n                <input className=\"form-control inputSignUp1\" name=\"username\" placeholder=\"Username\" type=\"text\" onChange={this.inputChangeSignUp} value={this.username} />\r\n                <br></br><br></br>\r\n                <input className=\"form-control inputSignUp2\" name=\"password\" placeholder=\"Password\" type=\"password\" onChange={this.inputChangeSignUp} value={this.password} />\r\n                <br></br><br></br>\r\n                <input className=\"form-control inputSignUp3\" name=\"phone\" placeholder=\"Phone\" type=\"text\" onChange={this.inputChangeSignUp} value={this.phone} />\r\n                <br></br><br></br>\r\n                <input className=\"form-control inputSignUp4\" name=\"email\" placeholder=\"Email\" type=\"text\" onChange={this.inputChangeSignUp} value={this.email} />\r\n                <br></br><br></br>\r\n                <button className=\"btn btn-outline-secondary signUp\" type=\"button\" onClick={this.add}>Sign Up</button>\r\n                <Link to='/'><button type=\"button\" className=\"btn btn-outline-secondary homesignupbtn\">HOME</button></Link>\r\n                {this.clicked && this.props.store.logged ? <Redirect to='/trips' /> : null}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from \"mobx\";\r\nimport '../../App.css';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass AddButton extends Component {\r\n    @observable trip = {\r\n        title: \"\",\r\n        description: \"\",\r\n        startDate: \"\",\r\n        people: \"\",\r\n        adress: \"\",\r\n        pictures: []\r\n    };\r\n\r\n    @observable\r\n\r\n    closeButton = () => {\r\n        this.props.closePopup(null)\r\n    }\r\n\r\n    @action inputChange = (t) => {\r\n        this.trip[t.target.name] = t.target.value;\r\n    }\r\n\r\n    addNewCheckpoint = () => {\r\n        if ((this.trip.title === \"\") || (this.trip.description === \"\") || (this.trip.startDate === \"\") || (this.trip.people === \"\") || (this.trip.adress === \"\")) {\r\n            alert(\"Please fill out all the fields!\")\r\n        }\r\n        // this.props.store.addTrip(this.trip.title, this.trip.description, this.trip.startDate, this.trip.endDate, this.trip.people, this.trip.adress, this.trip.pictures)\r\n        else {\r\n            let uppertitle=this.trip.title.charAt(0).toUpperCase() + this.trip.title.slice(1)\r\n            let upperdescription=this.trip.description.charAt(0).toUpperCase() + this.trip.description.slice(1)\r\n            let upperpeople=this.trip.people.charAt(0).toUpperCase() + this.trip.people.slice(1)\r\n            this.props.store.addCheckPoint({ data: { title: uppertitle, description: upperdescription, startDate: this.trip.startDate, people: upperpeople, adress: this.trip.adress, pictures: this.trip.pictures }, id: this.props.store.trip._id })\r\n            this.closeButton()\r\n            // alert (\"Your checkpoint saved!\")\r\n        }\r\n    }\r\n\r\n    fixDate = (time) => {\r\n        time = time.split('-');\r\n        let year = time[0];\r\n        let month = time[1];\r\n        let day = time[2][0] + '' + time[2][1];\r\n        return (year + '-' + month + '-' + day);\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.store.trip.endDate)\r\n        return (\r\n            <div className=\"add-button\">\r\n                <div className=\"popupcurr\">\r\n                    <input className=\"form-control inputpopup\" id=\"inputCurr\" type=\"text\" name=\"title\" placeholder=\"Title\" value={this.title} onChange={this.inputChange} />\r\n                    <br></br><br></br>\r\n                    <input className=\"form-control inputpopup\" id=\"inputCurr1\" type=\"text\" name=\"description\" placeholder=\"Description\" value={this.description} onChange={this.inputChange} />\r\n                    <br></br><br></br>\r\n                    <input className=\"form-control inputpopup\" id=\"inputCurr2\" min={this.fixDate(this.props.store.trip.startDate)} max={this.fixDate(this.props.store.trip.endDate)} type=\"Date\" name=\"startDate\" placeholder=\"StartDate\" value={this.startDate} onChange={this.inputChange} />\r\n                    <br></br><br></br>\r\n                    <input className=\"form-control inputpopup\" id=\"inputCurr3\" type=\"text\" name=\"people\" placeholder=\"People\" value={this.people} onChange={this.inputChange} />\r\n                    <br></br><br></br>\r\n                    <input className=\"form-control inputpopup\" id=\"inputCurr4\" type=\"text\" name=\"adress\" placeholder=\"Address - Please Be Specific!\" value={this.adress} onChange={this.inputChange} />\r\n                    <br></br><br></br>\r\n                    <input className=\"form-control inputpopup\" id=\"inputCurr5\" type=\"text\" name=\"pictures\" placeholder=\"Picture url\" value={this.pictures} onChange={this.inputChange} />\r\n                    <br></br><br></br>\r\n                    {/* <Images /> */}\r\n                    <button className=\"btn btn-outline-secondary addtripbuttoncurr\" type=\"button\" value=\"Add Checkpoint\" onClick={this.addNewCheckpoint}>Add Checkpoint</button>\r\n                    <button className=\"btn btn-outline-secondary closepopupbutton\" type=\"button\" value=\"X\" onClick={this.closeButton}>X</button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddButton;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable } from \"mobx\";\r\nimport AddButton from '../singletrip/addButton';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass AddForm extends Component {\r\n\r\n    @observable showPopup = false;\r\n\r\n    togglePopup = () => {\r\n        this.showPopup = !this.showPopup\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"addForm\">\r\n                  <button className=\"btn btn-outline-secondary addcheckpointbtn\" onClick={this.togglePopup} value=\"button\">Add checkpoint</button>\r\n                <div>\r\n                    {this.showPopup ?<AddButton id={this.props.id} closePopup={this.togglePopup}/>: null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddForm;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport '../../App.css';\r\nimport { observable, action } from \"mobx\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass ShowCheckPoint extends Component {\r\n\r\n    @observable to=\"\"\r\n    @observable Emailadress=\"\"\r\n\r\n    closeButtonCheckPoint = () => {\r\n        this.props.closeCheckPoint()\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.props.store.setCheckPoint()\r\n    }\r\n\r\n    fixDate=(time)=>{\r\n        time = time.split('-')\r\n        let year = time[0]\r\n        let month = time[1]\r\n        let day = time[2][0] + '' + time[2][1]\r\n        return (day + '/' + month + '/' + year)\r\n    }\r\n\r\n    @action checkfields = () => {\r\n        if ((this.to===\"\")||(this.Emailadress===\"\")){\r\n            alert (\"Please fill out all the fields!\")\r\n        }\r\n        else{\r\n            this.send()\r\n            this.closeButtonCheckPoint()\r\n            alert (\"Email sent successfully!\")\r\n        }\r\n    }\r\n\r\n    @action send = () => {\r\n        let cp = this.props.store.currCheckpoint\r\n        let from= this.props.store.username\r\n        let body= `When we where in ${cp.title}\\n On ${this.fixDate(cp.startDate)}\\n With ${cp.people}\\n ${cp.description} \\n https://my-journey-app.herokuapp.com/ `\r\n        let upperto= this.to.charAt(0).toUpperCase() + this.to.slice(1)\r\n        this.props.store.sendmail(from, upperto, this.Emailadress, body)\r\n    }\r\n\r\n    @action inputChange = (t) => {\r\n        this[t.target.name] = t.target.value;\r\n    }\r\n\r\n    render() {\r\n        let cp = this.props.store.currCheckpoint\r\n\r\n        if (cp) {\r\n            return (\r\n                <div className=\"popup-checkpoint\">\r\n                    <input className=\"btn btn-outline-secondary closepopupbutton\" type=\"button\" value=\"X\" onClick={this.closeButtonCheckPoint} />\r\n                    <br/>\r\n                    <h9>{cp.title}</h9>\r\n                    <div style={{maxHeight: '150px', maxWidth: '300'}}><img height={'200px'} width={'300px'} alt='checkpoint' src={cp.pictures[0]} /></div>\r\n                    <input className=\"form-control inputpopup\" id=\"inputmail2\" type=\"text\" name=\"Emailadress\" placeholder=\"Email address\" value={this.Emailadress} onChange={this.inputChange}/>   \r\n                    <br></br>\r\n                    <input className=\"form-control inputpopup\" id=\"inputmail1\" type=\"text\" name=\"to\" placeholder=\"To\" value={this.to} onChange={this.inputChange}/>\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary btnsendmail\" onClick={this.checkfields}>Send mail</button>                \r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"popup-checkpoint\">\r\n                    <button className=\"btn btn-outline-secondary closepopupbutton\" type=\"button\" onClick={this.closeButtonCheckPoint}>X</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShowCheckPoint;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport '../../App.css';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass TripDetails extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.store.setTrip(this.props.id)\r\n    }\r\n\r\n    fixDate = (time) => {\r\n        time = time.split('-');\r\n        let year = time[0];\r\n        let month = time[1];\r\n        let day = time[2][0] + '' + time[2][1];\r\n        return (day + '/' + month + '/' + year);\r\n    }\r\n\r\n    render() {\r\n        let trip = this.props.store.trip;\r\n        if (trip && trip.startDate && trip.endDate) {\r\n            return (\r\n                <div className=\"tripdetails\">\r\n                    <h1>{trip.title}</h1>\r\n                    <h2>{trip.description}</h2>\r\n                    <div>{this.fixDate(trip.startDate)} - {this.fixDate(trip.endDate)}</div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default TripDetails;","import { Map, Marker, GoogleApiWrapper, Polyline } from 'google-maps-react';\r\nimport React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport '../../App.css'\r\nimport { observable } from 'mobx';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass MapContainer extends Component {\r\n    componentDidMount = () => {\r\n        this.props.store.setTrip(this.props.id).then(()=>{\r\n            this.props.store.addInitialCenter(this.props.store.trip.title.split(' ')[0])\r\n        })\r\n    }\r\n    @observable marker = {}\r\n\r\n    click = (marker, e) => {\r\n        this.props.togglePopupCheckPoint();\r\n        this.marker = marker;\r\n        this.props.store.setCheckPoint(this.marker.id)\r\n    }\r\n\r\n    render() {\r\n        let trip = this.props.store.trip;\r\n        let initialCenter = this.props.store.initialCenter;\r\n        if (trip && trip.checkpoints &&  trip.checkpoints.length) {\r\n           let centerOfMap = trip.checkpoints[0].coordinant ;\r\n            let coordns = []\r\n            for (let c of trip.checkpoints) {\r\n                coordns.push(c.coordinant)\r\n            }\r\n            coordns.sort(function (a, b) {\r\n                if (a.lng > b.lng) {\r\n                    return 1\r\n                }\r\n                if (a.lng < b.lng) {\r\n                    return -1\r\n                }\r\n            })\r\n            if(this.props.store.currentCP){\r\n                centerOfMap = trip.checkpoints.find(c => c.title === this.props.store.currentCP)\r\n                // console.log(centerOfMap)\r\n                centerOfMap = centerOfMap.coordinant\r\n            }\r\n            else{\r\n                centerOfMap = trip.checkpoints[0].coordinant\r\n            }\r\n            return (\r\n                    <Map className=\"map\" style={{ width: '50%', height: '50%' }} center={centerOfMap} initialCenter={centerOfMap} google={this.props.google} zoom={14}>\r\n                        <Polyline\r\n                            path={\r\n                                // trip.checkpoints.map(c => { return c.coordinant })\r\n                                coordns.map(c => { return c })\r\n                            }\r\n                            strokeColor=\"grey\"\r\n                            strokeWeight={2}\r\n                            strokeStyle='dotted'\r\n                            strokeOpacity={0.8}\r\n                        />\r\n\r\n                        {trip.checkpoints.map(c => { return <Marker  animation= {this.props.google.maps.Animation.DROP} key={c._id} id={c._id} onClick={this.click} name={c.title} position={c.coordinant} /> })}\r\n                    </Map>\r\n            );\r\n        }\r\n        else if (trip && initialCenter) {\r\n            // console.log(initialCenter)\r\n            return (\r\n                <Map className=\"map\" style={{ width: '50%', height: '50%' }} center={initialCenter} initialCenter={initialCenter} google={this.props.google} zoom={7}>\r\n                    <Polyline\r\n                        path={\r\n                            [initialCenter]\r\n                        }\r\n                        strokeColor=\"green\"\r\n                        strokeWeight={2}\r\n                        strokeStyle='dotted'\r\n                        strokeOpacity={0.3} />\r\n                    {/* <Marker id='1' onClick={this.click} name={trip.title} position={initialCenter} /> */}\r\n                </Map>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Map className='map' style={{ width: '50%', height: '50%' }} google={this.props.google} zoom={7}></Map>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n// export default MapContainer\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyA-NDun_On5Bx3TerMVbAaC8jfU7jotv8M'),\r\n    MapContainer\r\n})(MapContainer)","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport '../../App.css';\r\nimport { observable } from 'mobx';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass TimeLine extends Component {\r\n    @observable click = false;\r\n    @observable currentCP = null\r\n\r\n    componentDidMount = () => {\r\n        // console.log(this.props.id)\r\n        this.props.store.setTrip(this.props.id)\r\n\r\n    }\r\n\r\n    fixDate = (time) => {\r\n        time = time.split('-')\r\n        let year = time[0]\r\n        let month = time[1]\r\n        let day = time[2][0] + '' + time[2][1]\r\n        return (day + '/' + month + '/' + year)\r\n    }\r\n\r\n    clickTitle = (e) => {\r\n        this.click = true;\r\n        // console.log(e.target.innerText)\r\n        this.props.store.changeCurrCP(e.target.id)\r\n        console.log(e.target.id)\r\n    }\r\n\r\n    clickClose = () => {\r\n        this.click = false;\r\n        this.props.store.changeCurrCP('')\r\n    }\r\n\r\n    render() {\r\n        let trip = this.props.store.trip\r\n\r\n        // console.log(trip)\r\n        if (trip && trip.checkpoints && trip.checkpoints.length) {\r\n            // trip.checkpoints.splice().sort(function (a, b) {\r\n            //     // if (new Date(a.startDate).getTime() > new Date(b.startDate).getTime()) {\r\n            //     //     return 1\r\n            //     // }\r\n            //     // if (new Date(a.startDate).getTime() < new Date(b.startDate).getTime()) {\r\n            //     //     return -1\r\n            //     // }\r\n            //     return new Date(a.startDate) - new Date(b.startDate)\r\n            // })\r\n            let currentObjCP = trip.checkpoints.find(c => c.title === this.props.store.currentCP)\r\n            // console.log(trip.checkpoints)\r\n            return (\r\n                <div className='wrapper'>\r\n                <h3>Places You've Been</h3>\r\n                    {trip.checkpoints.map(c => {\r\n                        return (\r\n                            <div key={c._id}>\r\n                                <div className=\"timeline\" >\r\n                                    {c.title === this.props.store.currentCP ?\r\n                                        <h6 style={{ backgroundColor: 'rgba(175, 175, 175, 0.493)' }} onClick={this.clickTitle}> {c.title} </h6>\r\n                                        :\r\n                                        <span> <h6 className='timeline-title' onClick={this.clickTitle} id={c.title}>{this.fixDate(c.startDate)} - {c.title}</h6></span>\r\n                                    }\r\n                                </div>\r\n                                    <hr className=\"hr1\"></hr>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    {this.props.store.currentCP && this.click ?\r\n                        <div className=\"popupTitle\">\r\n                            <button className=\"btn btn-outline-secondary closebutton\" type=\"button\" value=\"X\" onClick={this.clickClose}>X</button>\r\n                            <p>{currentObjCP.description}</p>\r\n                            <div><span className=\"spanTitle\">On: </span>{this.fixDate(currentObjCP.startDate)}</div>\r\n                            <div><span className=\"spanTitle\">With</span> {currentObjCP.people.map(p => {\r\n                                return <span key={p}>{p}</span>\r\n                            })}</div>\r\n                            <hr className=\"hr1\"></hr>\r\n\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n\r\n            )\r\n        }\r\n        else {\r\n            return (<div className=\"timeline\"></div>)\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default TimeLine;","import React, { Component } from 'react';\r\nimport Logo from '../home/logo';\r\nimport { inject, observer } from 'mobx-react';\r\nimport '../../App.css';\r\nimport AddForm from './addForm'\r\nimport { observable } from 'mobx';\r\nimport Header from '../home/header';\r\nimport ShowCheckPoint from './showcheckpoint'\r\nimport TripDetails from './tripDetails';\r\nimport MapContainer from './map';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TimeLine from './timeline'\r\nimport { Link } from 'react-router-dom';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass CurrTrip extends Component {\r\n    @observable showPopup = false;\r\n\r\n    togglePopupCheckPoint = () => {\r\n        this.showPopup = !this.showPopup\r\n    }\r\n    close = () => {\r\n        this.showPopup = false\r\n    }\r\n\r\n    click = () => {\r\n        this.props.store.goBack()\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.store.setTrip(this.props.match.params.id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Logo />\r\n                <hr />\r\n                <img src=\"https://cdn2.iconfinder.com/data/icons/arrows-and-universal-actions-icon-set/256/arrow_left_circle-512.png\" height=\"25px\" alt=\"arrow\" className=\"back\" onClick={this.click}/>\r\n                <TimeLine id={this.props.match.params.id} />\r\n                <AddForm />\r\n                <TripDetails id={this.props.match.params.id} />\r\n                <MapContainer id={this.props.match.params.id} togglePopupCheckPoint={this.togglePopupCheckPoint} />\r\n                <div>\r\n                    {this.showPopup ?\r\n                        <ShowCheckPoint marker={this.props.store.marker}\r\n                            closeCheckPoint={this.close}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n\r\n                {!this.props.store.logged ? <Redirect to='/' /> : null}\r\n                {this.props.store.back ?<Redirect to='/trips' /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrTrip;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../App.css'\r\nimport { observable, action } from 'mobx';\r\nimport { Redirect } from 'react-router-dom';\r\nimport BigLogo from './Biglogo';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Login extends Component {\r\n    @observable username = \"\";\r\n    @observable password = \"\";\r\n    @observable ifexists = false\r\n    @observable clicked = false\r\n\r\n    click = async () => {\r\n        if ((this.username===\"\")||(this.password===\"\")){\r\n            alert (\"Please fill out all the fields!\")\r\n        }\r\n        else{\r\n            let upperusername=this.username.charAt(0).toUpperCase() + this.username.slice(1)\r\n            let user = await this.props.store.setLogin(upperusername, this.password)\r\n        if (user.data.username) {\r\n            this.ifexists = true\r\n            this.props.store.findnamebyid(user.data._id)\r\n            this.props.store.getTripsInLogin(user.data._id)\r\n            this.props.store.setUser(user.data)\r\n            this.props.store.setId(user.data._id)\r\n            this.props.store.login();\r\n            // console.log(this.props.store.logged)\r\n            // alert('Welcome Back ' + user.data.username + ' !')\r\n        }\r\n        else {\r\n            this.ifexists = false\r\n            alert('Your username or passward incorrect!')\r\n        }\r\n        this.clicked = true\r\n        }\r\n    }\r\n    // welcome back alert...\r\n\r\n    @action inputChangeLogin = (e) => { this[e.target.name] = e.target.value }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <BigLogo />\r\n            <div className=\"login\">\r\n                <h1 className=\"title-sign-up\">Login</h1>\r\n                <input className=\"form-control inputLogin1\" name=\"username\" placeholder=\"Username\" type=\"text\" onChange={this.inputChangeLogin} value={this.username} />\r\n                <br></br><br></br>\r\n                <input className=\"form-control inputLogin2\" name=\"password\" placeholder=\"Password\" type=\"password\" onChange={this.inputChangeLogin} value={this.password} />\r\n                <br></br><br></br>\r\n                <button className=\"btn btn-outline-secondary signUp\" type='button' onClick={this.click}>LOGIN</button>\r\n                <Link to='/'><button type=\"button\" className=\"btn btn-outline-secondary homebtn\">HOME</button></Link>\r\n                {this.clicked && this.ifexists ? <Redirect to='/trips'/> : null}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <h10>Welcome to</h10>\r\n                <h5>MY JOURNEY</h5>\r\n                <h6>How many times did you get to fly abroad and after a few years you were upset that you did not record every minute of your journey?</h6>\r\n                <h6>On your journey after army? On a trip to Poland? Roots trip? It probably happened a few times...</h6>\r\n                <h6>So we're here to solve the problem,</h6>\r\n                <h6>with our website you can record every moment of your trip on points on the map, add photos, and send to friends!</h6>\r\n                <h6>So What are you waiting for? sign in and start recording!</h6>\r\n                <Link to='/signup'><button type=\"button\" className=\"btn btn-outline-secondary signupbtn\">SIGN UP</button></Link>\r\n                <Link to='/login'><button type=\"button\" className=\"btn btn-outline-secondary loginbtn\">LOGIN</button></Link>\r\n                {/* <img src=\"https://cimss.ssec.wisc.edu/satmet/modules/6_sat_winds/images/aircraft.gif\" className=\"gif\"/> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Home from './components/home/home';\r\nimport './App.css';\r\nimport SignUp from './components/users/signUp';\r\nimport CurrTrip from './components/singletrip/currTrip';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Login from './components/users/login'\r\nimport Landing from './components/users/landing';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Route path='/' exact render={() => <Landing />} />\r\n          <Route path=\"/trips/:id\" exact render={({ match }) => <CurrTrip match={match} />} />\r\n          <Route path=\"/trips\" exact render={({ match }) => <Home match={match} />} />\r\n          <Route path=\"/signup\" exact render={() => <SignUp />} />\r\n          <Route path=\"/login\" exact render={() => <Login />} />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { observable, action } from \"mobx\";\r\nimport axios from 'axios';\r\n\r\nclass TripStore {\r\n\r\n    @observable trip = null;\r\n    @observable trips = [];\r\n    @observable tripstosearch = [];\r\n    @observable showpopupaddtrip = false;\r\n    @observable marker = {}\r\n    @observable currCheckpoint = null\r\n    @observable ifexists = false\r\n    @observable initialCenter = null\r\n    @observable userId = localStorage.getItem('userId')\r\n    @observable username = null;\r\n    @observable tripId = localStorage.getItem('tripId')\r\n    @observable logged = true;\r\n    @observable img = ''\r\n    @observable allCheckpoint = null;\r\n    @observable currentCP = null;\r\n    @observable user = null;\r\n    @observable usernameexist = \"\";\r\n    @observable back = '';\r\n\r\n    @action goBack = () => {\r\n        this.back = '!'\r\n    }\r\n\r\n    @action Wentback = () => {\r\n        this.back = '';\r\n    }\r\n\r\n    @action setUser = (user) => {\r\n        this.user = user;\r\n    }\r\n\r\n    @action setUserById = async (id) => {\r\n        let name = await axios.get('/users/' + id)\r\n        this.user = name.data\r\n    }\r\n\r\n    @action changeCurrCP = (cp) => {\r\n        this.currentCP = cp;\r\n    }\r\n\r\n    @action setId = (id) => {\r\n        localStorage.setItem('userId', id)\r\n    }\r\n\r\n    @action login = () => {\r\n        this.logged = true\r\n    }\r\n\r\n    @action logout = () => {\r\n        this.userId = '';\r\n        localStorage.setItem('userId', '');\r\n        this.trips = [];\r\n        this.trip = null;\r\n        this.tripstosearch = [];\r\n        this.logged = false\r\n    }\r\n\r\n    @action setTripId = (id) => {\r\n        localStorage.setItem('tripId', id)\r\n    }\r\n\r\n    @action setMarker = (marker) => {\r\n        this.marker = marker\r\n    }\r\n\r\n    @action getTripsInLogin = async (id) => {\r\n        let trips = await axios.get('/' + id + '/trips')\r\n        this.setTripsValue(trips.data.trips)\r\n        console.log(this.trips)\r\n        this.tripstosearch = [...this.trips];\r\n        this.logged = true\r\n    }\r\n\r\n    @action checkusernameexist = async (username) => {\r\n        let check = await axios.get('/findusers/' + username)\r\n        // console.log(check)\r\n        if (check.data===\"doesntexist\"){\r\n            this.usernameexist=false;\r\n        }\r\n        else{\r\n            this.usernameexist=true;\r\n        }\r\n    }\r\n\r\n    @action getTrips = async () => {\r\n        // if (id === '') {\r\n        let trips = await axios.get('/' + this.userId + '/trips')\r\n        this.setTripsValue(trips.data.trips)\r\n        this.tripstosearch = [...this.trips];\r\n        // }\r\n        // else {\r\n        //     let trips = await axios.get('http://localhost:1000/' + id + '/trips')\r\n        //     this.setTripsValue(trips.data.trips)\r\n        //     this.tripstosearch = [...this.trips];\r\n        // }\r\n    }\r\n\r\n    @action setTripsValue = (trips) => {\r\n        this.trips = trips\r\n    }\r\n\r\n    @action checkIf = async (username) => {\r\n        let ifE = await axios.get('/users/' + username);\r\n        this.ifExist = ifE.data\r\n    }\r\n\r\n    @action setCheckPoint = async (id) => {\r\n        let checkpoint = await axios.get('/checkpoints/' + id)\r\n        this.currCheckpoint = checkpoint.data\r\n        this.allCheckpoint = checkpoint.data\r\n    } //???? why doesnt it get an id in showcheckpoint????\r\n\r\n    @action findnamebyid = async (id) => {\r\n        let name = await axios.get('/users/' + id)\r\n        this.username = name.data.username\r\n    }\r\n\r\n    @action setTrip = async (id) => {\r\n        let data = await axios.get('/tripsAPI/' + id);\r\n        this.trip = data.data\r\n    }\r\n\r\n    @action changeshowpopupaddtrip = () => {\r\n        this.showpopupaddtrip = !this.showpopupaddtrip\r\n    }\r\n\r\n    @action setLogin = async (username, password) => {\r\n        let trips = await axios.get('/users/' + username + '/' + password)\r\n        return trips\r\n    }\r\n\r\n    @action sendmail = async (from, to, Emailadress, body) => {\r\n        await axios.post('/sendmail', { from: from, to: to, Emailadress: Emailadress, body: body })\r\n    }\r\n\r\n    AddUser = async (newUser) => {\r\n        let New = await axios.post('/users', newUser)\r\n        this.user = New.data\r\n        this.username = New.data.user\r\n    }\r\n\r\n    Addtrip = async (title, description, startDate, endDate, imageurl) => {\r\n        let images = await axios.get(`https://www.googleapis.com/customsearch/v1?key=AIzaSyA-NDun_On5Bx3TerMVbAaC8jfU7jotv8M&cx=014991769965957097369:idopkmpkkbo&q=${title.split(' ')[0] + ' place'}&?searchType=Image&defaultToImageSearch=true&safe=active`)\r\n        // console.log(images.data.items[0].pagemap.imageobject[0].thumbnailurl)\r\n        let trip = await axios.post('/' + this.userId + '/trips', { title: title, description: description, startDate: startDate, endDate: endDate, imageurl: imageurl })\r\n        this.trip = trip.data\r\n        this.tripstosearch.push(trip.data)\r\n        this.trips.push(trip.data)\r\n        this.getTrips()\r\n    }\r\n\r\n    @action addCheckPoint = async (newCheckPoint) => {\r\n        try {\r\n            let data = await axios.get('https://maps.googleapis.com/maps/api/geocode/json?address=' + newCheckPoint.data.adress + '&key=AIzaSyA-NDun_On5Bx3TerMVbAaC8jfU7jotv8M')\r\n            let images = await axios.get(`https://www.googleapis.com/customsearch/v1?key=AIzaSyA-NDun_On5Bx3TerMVbAaC8jfU7jotv8M&cx=014991769965957097369:idopkmpkkbo&q=${newCheckPoint.data.adress}&?searchType=Image&defaultToImageSearch=true&safe=active`)\r\n            if (newCheckPoint.data.pictures.length) {\r\n                let newcp = await axios.post('/checkpoints', { object: newCheckPoint, coo: data.data.results[0].geometry.location, images: newCheckPoint.data.pictures });\r\n            }\r\n            else {\r\n                let newcp = await axios.post('/checkpoints', { object: newCheckPoint, coo: data.data.results[0].geometry.location, images: images.data.items[0].pagemap.imageobject[0].thumbnailurl });\r\n\r\n            }\r\n            let updatedTrip = await axios.get('/tripsAPI/' + this.trip._id)\r\n            this.trip = updatedTrip.data\r\n        }\r\n        catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    @action addInitialCenter = async (adress) => {\r\n        let data = await axios.get('https://maps.googleapis.com/maps/api/geocode/json?address=' + adress + '&key=AIzaSyA-NDun_On5Bx3TerMVbAaC8jfU7jotv8M')\r\n        this.initialCenter = data.data.results[0].geometry.location\r\n    }\r\n\r\n    @action searchtrip = (searchword) => {\r\n        if (this.searchword !== \"\") {\r\n            let filterdarr = this.trips.filter((trip) => {\r\n                return trip.title.toString().toLowerCase().includes(searchword.toLowerCase())\r\n            })\r\n            this.tripstosearch = filterdarr\r\n        }\r\n    }\r\n\r\n    getIcon = async (searchIconName) => {\r\n        // let json = await axios.get(`https://www.googleapis.com/customsearch/v1?key=AIzaSyA-NDun_On5Bx3TerMVbAaC8jfU7jotv8M&cx=014991769965957097369:idopkmpkkbo&q=${searchIconName}&?searchType=Image&defaultToImageSearch=true&safe=active`)\r\n        // this.img = json.data.items[0].pagemap.imageobject[0].thumbnailurl;\r\n        // console.log(this.img)\r\n        let json = await axios.get(\"https://api.icons8.com/api/iconsets/search?term=romania\")\r\n        console.log(json)\r\n    }\r\n}\r\n\r\nconst Store = new TripStore();\r\n\r\nexport default Store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Store from './store/tripStore';\r\nimport { Provider } from 'mobx-react';\r\n\r\nwindow.Store = Store\r\n\r\nReactDOM.render(<Provider store={Store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}